{"version":3,"sources":["components/carouselArrow.jsx","components/carousel.jsx","components/onboardingModal.jsx"],"names":["CarouselArrow","props","className","onClick","Arrow","styled","div","includes","ArrowIcon","KeyboardArrowRight","style","right","KeyboardArrowLeft","left","SliderContainer","Padding","Carousel","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","isOnboarding","children","Modal","setAppElement","CarouselWrapper","StepWrapper","StepText","p","colors","font","fontHighlight","StepImageWrapper","StepImage","img","SkipModalButton","link","hexToRgba","modalStyle","overlay","position","top","bottom","backgroundColor","display","justifyContent","alignItems","zIndex","content","padding","border","background","main","flexDirection","width","maxWidth","window","innerWidth","OnboardingModal","isOpen","onRequestClose","closeModal","alt","src","process"],"mappings":"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","file":"static/js/4.77341ba0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {KeyboardArrowLeft} from 'styled-icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRight} from 'styled-icons/material/KeyboardArrowRight';\n\nCarouselArrow.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nfunction CarouselArrow(props) {\n    const {className, onClick} = props;\n    const Arrow = styled.div`\n        position: absolute;\n        top: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 8rem;\n        height: 10rem;\n        transform: translate(0, -50%);\n        cursor: pointer;\n        background: #12171E;\n        border-radius: 1.2rem;\n        z-index: 1;\n    `;\n\n    // Next arrow\n    if (className.includes('slick-next')) {\n        const ArrowIcon = styled(KeyboardArrowRight)`\n            height: 6.5rem;\n            color: ${className.includes('slick-disabled') ? 'rgba(255, 255, 255, 0.3)' : '#fff'};\n        `;\n        return (\n            <Arrow\n                style={{right: '-8.5rem'}}\n                onClick={onClick}\n            >\n                <ArrowIcon/>\n            </Arrow>\n        );\n    }\n\n    const ArrowIcon = styled(KeyboardArrowLeft)`\n        height: 6.5rem;\n        color: ${className.includes('slick-disabled') ? 'rgba(255, 255, 255, 0.3)' : '#fff'};\n    `;\n\n    // Prev arrow\n    return (\n        <Arrow\n            style={{left: '-9.5rem'}}\n            onClick={onClick}\n        >\n            <ArrowIcon/>\n        </Arrow>\n    );\n}\n\nexport default CarouselArrow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport styled from 'styled-components';\nimport CarouselArrow from './carouselArrow';\n\nCarousel.propTypes = {\n    children: PropTypes.array,\n    isOnboarding: PropTypes.bool,\n};\n\nconst SliderContainer = styled.div`\n    height: 100%;\n    padding: 3rem;\n`;\n\nconst Padding = styled.div`\n    padding-left: 5.5rem;\n    padding-right: 4.5rem;\n`;\n\nfunction Carousel(props) {\n    const settings = {\n        dots: true,\n        infinite: false,\n        lazyLoad: true,\n        speed: 500,\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        nextArrow: <CarouselArrow/>,\n        prevArrow: <CarouselArrow/>,\n        responsive: [\n            {\n                breakpoint: 2400,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                },\n            },\n            {\n                breakpoint: 1000,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                },\n            },\n            {\n                breakpoint: 600,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                },\n            },\n        ],\n    };\n\n    // Force carousel to show single slide on onboarding modal\n    if (props.isOnboarding) {\n        settings.slidesToShow = 1;\n        settings.slidesToScroll = 1;\n        settings.responsive = [];\n    }\n\n    return (\n        <SliderContainer>\n            <Padding>\n                <Slider {...settings}>{props.children}</Slider>\n            </Padding>\n        </SliderContainer>\n    );\n}\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\n\nimport {colors, hexToRgba, breakpoint} from '../utils';\nimport Carousel from './carousel';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nOnboardingModal.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    closeModal: PropTypes.func.isRequired,\n};\n\n// This line breaks tests but it's necessary for modal to function\n// For now we're ignoring this only during unit tests\nif (process.env.NODE_ENV !== 'test') {\n    Modal.setAppElement('#root');\n}\n\nconst MAX_MODAL_WIDTH = 750;\n\nconst CarouselWrapper = styled.div`\n    flex: 1;\n`;\n\nconst StepWrapper = styled.div`\n    height: 100%;\n`;\n\nconst StepText = styled.p`\n    color: ${colors.font};\n    text-align: center;\n    font-size: 3rem;\n\n    strong {\n        color: ${colors.fontHighlight}\n    }\n`;\n\nconst StepImageWrapper = styled.div`\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StepImage = styled.img`\n    margin: 0 auto;\n    width: 80%;\n    max-width: 100%;\n    height: auto;\n\n    ${breakpoint('lg')`\n        width: auto;\n    `}\n`;\n\nconst SkipModalButton = styled.p`\n    display: flex;\n    flex: 0;\n    justify-content: flex-end;\n    padding: 20px;\n    margin: 0;\n    cursor: pointer;\n    color: ${colors.link};\n    font-size: 1.8rem;\n    background: rgba(0, 0, 0, 0.2);\n\n    &:hover {\n        color: ${hexToRgba(colors.link, 0.8)}\n    }\n`;\n\nconst modalStyle = {\n    overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 5,\n    },\n    content: {\n        padding: 0,\n        border: 'none',\n        background: colors.main,\n        display: 'flex',\n        flexDirection: 'column',\n        width: 'auto',\n        maxWidth: MAX_MODAL_WIDTH,\n        top: 'initial',\n        bottom: 'initial',\n        left: window.innerWidth <= MAX_MODAL_WIDTH ? 10 : 'initial',\n        right: window.innerWidth <= MAX_MODAL_WIDTH ? 10 : 'initial',\n    },\n};\n\nfunction OnboardingModal(props) {\n    return (\n        <Modal\n            isOpen={props.isOpen}\n            onRequestClose={props.closeModal}\n            style={modalStyle}\n        >\n            <SkipModalButton onClick={props.closeModal}>{'Close tutorial'}</SkipModalButton>\n            <CarouselWrapper>\n                <Carousel isOnboarding={true}>\n                    <StepWrapper>\n                        <StepText>{'1. '}\n                            <strong>{'Click on a thumbnail '}</strong>\n                            {'to copy it to your clipboard.'}\n                        </StepText>\n                        <StepImageWrapper>\n                            <StepImage\n                                alt={'onboarding_1'}\n                                src={`${process.env.PUBLIC_URL}/img/onboarding/onboarding_1.png`}\n                            />\n                        </StepImageWrapper>\n                    </StepWrapper>\n\n                    <StepWrapper>\n                        <StepText>\n                            {'2. Navigate to your '}\n                            <strong>{'account settings '}</strong>\n                            {'on any Mattermost server.'}\n                        </StepText>\n                        <StepImageWrapper>\n                            <StepImage\n                                alt={'onboarding_2'}\n                                src={`${process.env.PUBLIC_URL}/img/onboarding/onboarding_2.png`}\n                            />\n                        </StepImageWrapper>\n                    </StepWrapper>\n\n                    <StepWrapper>\n                        <StepText>\n                            {'3. Go to the '}\n                            <strong>{'Display menu, '}</strong>\n                            {'and open the '}\n                            <strong>{'Themes tab.'}</strong>\n                        </StepText>\n                        <StepImageWrapper>\n                            <StepImage\n                                alt={'onboarding_3'}\n                                src={`${process.env.PUBLIC_URL}/img/onboarding/onboarding_3.png`}\n                            />\n                        </StepImageWrapper>\n                    </StepWrapper>\n\n                    <StepWrapper>\n                        <StepText>\n                            {'4. Select '}\n                            <strong>{'Custom Theme, '}</strong>\n                            {'paste the selected theme '}\n                            <strong>{'over the textbox, '}</strong>\n                            {'and '}\n                            <strong>{'save!'}</strong>\n                        </StepText>\n                        <StepImageWrapper>\n                            <StepImage\n                                alt={'onboarding_4'}\n                                src={`${process.env.PUBLIC_URL}/img/onboarding/onboarding_4.png`}\n                            />\n                        </StepImageWrapper>\n                    </StepWrapper>\n                </Carousel>\n            </CarouselWrapper>\n        </Modal>\n    );\n}\n\nexport default OnboardingModal;"],"sourceRoot":""}